Two Sided Marketplace Course from Codeplace, on Rails 5

1
gem install rails
rails -v // 5.02

2
rails new estuk // estuk/ folder created, 
    how to run rails 5 on c9.io?

3
cd estuk; rails server -b $IP -p $PORT; 
    it's running, how to get to it?
click on 'Share' next to gear in c9 workspace, copy the 2nd link, paste in new tab and run

4
SAVE FIRST COMMIT: 
    git init; git add --all; git commit; (not passing -m will open the nano editor to add the commit message)
    type the commit message
    CTRL O; [ENTER]; CTRL X (save the message; confirm command; exit nano editor)
    
5
ADD REMOTE REPOSITORY:
    In github, click new repository, give it a good name and description, then:
    git remote add origin https://github.com/ImsirovicAjdin/codeplace-two.git
    git push -u origin master
6
ADD BOOTSTRAP
sourcecode: 
    https://github.com/seyhunak/twitter-bootstrap-rails
add bootstrap gem: 
    gem 'twitter-bootstrap-rails', :git => 'git://github.com/seyhunak/twitter-bootstrap-rails.git'
run bundle install: 
    bundle install
run the generator:
    rails generate bootstrap:install static
git commit:
    git add --all; git commit -m "Add bootstrap"; git push -u origin master
    
7
INSTALL SIMPLEFORM
source:
    https://github.com/plataformatec/simple_form
add simple_form gem:
    gem 'simple_form'
run the following command to install it:
    bundle install
Run the generator:
    rails generate simple_form:install --bootstrap
git commit:
    git add --all; git commit -m "Add simple_form"; git push -u origin master
    
8 
ADD OUR HOMEPAGE
"Before adding the user Authentication, it's a good idea to have at least one page in our application"
"Generate a controller called 'pages', with only one action -> 'home'
    rails generate controller pages home
"Replace the default route that was generated by the controller and replace it with the following root route":
    Rails.application.routes.draw do
        get 'pages/home'
        root 'pages#home # <-- THIS HERE!

9
TRY REFRESHING THE WEBSITE, YOU'LL GET THIS ERROR:
couldn't find file 'twitter-bootstrap-static/bootstrap' with type 'text/css'
FIX: Restart the server

10
ADD USERS
"We are going to use a really amazing gem for user authentication called: devise."
source:
    https://github.com/plataformatec/devise
add gem:
    gem 'devise'
install the gem:
    bundle install
run the generator for devise, as per the instructions from the documentation:
    rails generate devise:install
To finish up the devise installation, we need to setup the default mailer as per instructions on the terminal output.
    config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
Create the views for the users:
    rails generate devise:views
Finally create the users by runnign the devise generator in the terminal:
    rails generate devise User
After the creation of the User table, migrate the db:
    rake db:migrate
Go to your website/users/sign_up (NOTE: YOU MUST RESTART THE SERVER)
git add --all; git commit -m "Add devise"; git push -u origin master

11
ADD THE HEADER
Bootstrap navbar section:
    http://getbootstrap.com/components/#navbar
Copy the html, add it to _header.html.erb.
    app/views/layouts/_header.html.erb
Render the partial by adding it to application.html.erb:
    just above the yield stmt, inside the body tags
Go to your webpage, F12, remove redundant elements.
    when you done, copy the remaining navbar into _header.
git add --all; git commit -m "Add blank navbar"; git push -u origin master

12
ADD THE DYNAMIC LINKS
Based on whether or not the user is logged in, add the dynamic links to the navbar.

13
ADD THE JUMBOTRON
Navigate and copy:
    http://getbootstrap.com/components/#jumbotron
Add it to homepage:
    ./app/views/pages/home.html.erb
git add --all; git commit -m "Add jumbotron"; git push -u origin master

14
MAKE DEVISE VIEWS LOOK NICER
Create a stylesheet named devise.css.scss:
    ./app/assets/stylestheets/devise.css.scss
Apply the created classes to your sign_in form:
    .app/views/devise/sessions/new.html.erb
The same for the sign_up form:
    ./app/views/devise/registrations/new.html.erb
The same for the reset_password form:
    ./app/views/devise/passwords/new.html.erb
The same for the edit/registrations page:
    ./app/views/devise/registrations/edit.html.erb
Activate client side validation on the simple_form initializer:
    ./app/config/initializers/simple_form.rb
git add --all; git commit -m "Make devise look better"; git push origin master

15
GENERATING BOOKS

With one command we can create the whole book scaffold, it's gonna generate all.
First we gonna think what kind of attributes a book will have:
    name, author name, description, 2 attachments, 1 preview and 1 resource, & price.
We're gonna use stripe, and stripe uses a price in cents. $1 = 100 cents.
SCAFFOLD THE BOOK, start with basic attribs, l8tr we'll add more fields
    rails generate scaffold book name:string author:string description:text price:integer availability:boolean
BEFORE RUNNING THE MIGRATION, SET availability FIELD DEFAULT VALUE TO TRUE
    ./db/migrate/...create_books.rb
        t.boolean :availability, default: true
INSIDE views/books, DELETE index.json.builder and show.json.builder (we don't need these files)
NOW MIGRATE THE DB, this command will create a table named "Books" with 5 columns: name, author, description, price, availability
    rake db:migrate
THE SCAFFOLD CREATED A CSS FILE WE DON'T NEED, DELETE IT
    (X) scaffold.scss
ADD THE books_path TO OUR VIEWS in _header
    ./app/views/layouts/_header.html.erb
ADD THE books_path TO HOMEPAGE TOO
    <% link_to "Books", books_path, class: "btn btn-primary" %>
IN OUR pages_controller, ENSURE THE current_user IS REDIRECTED TO THE books_path
GIT ADD, COMMIT "Add the books scaffold", PUSH

16












